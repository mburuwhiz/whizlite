// A map of normal characters to their upside-down equivalents
const flipMap = {
    'a': '…ê', 'b': 'q', 'c': '…î', 'd': 'p', 'e': '…ô', 'f': '…ü', 'g': '∆É', 'h': '…•', 'i': '·¥â', 'j': '…æ', 'k': ' û', 'l': 'l', 'm': '…Ø', 'n': 'u', 'o': 'o', 'p': 'd', 'q': 'b', 'r': '…π', 's': 's', 't': ' á', 'u': 'n', 'v': ' å', 'w': ' ç', 'x': 'x', 'y': ' é', 'z': 'z',
    'A': '‚àÄ', 'B': 'B', 'C': '∆Ü', 'D': 'D', 'E': '∆é', 'F': '‚Ñ≤', 'G': '◊§', 'H': 'H', 'I': 'I', 'J': '≈ø', 'K': 'K', 'L': 'À•', 'M': 'W', 'N': 'N', 'O': 'O', 'P': '‘Ä', 'Q': 'Q', 'R': 'R', 'S': 'S', 'T': '‚î¥', 'U': '‚à©', 'V': 'Œõ', 'W': 'M', 'X': 'X', 'Y': '‚ÖÑ', 'Z': 'Z',
    '0': '0', '1': '∆ñ', '2': '·ÑÖ', '3': '∆ê', '4': '„Ñ£', '5': 'œõ', '6': '9', '7': '„Ñ•', '8': '8', '9': '6',
    '.': 'Àô', ',': "'", "'": ',', '"': '‚Äû', '`': ',', '?': '¬ø', '!': '¬°', '(': ')', ')': '(', '[': ']', ']': '[', '{': '}', '}': '{', '_': '‚Äæ', '&': '‚Öã'
};

function flipText(text) {
    let flipped = '';
    for (let i = 0; i < text.length; i++) {
        const char = text[i];
        flipped += flipMap[char] || char;
    }
    return flipped.split('').reverse().join('');
}

// Zalgo characters (combining diacritical marks)
const zalgoUp = ['\u030d', '\u030e', '\u0304', '\u0305', '\u033f', '\u0311', '\u0306', '\u0310', '\u0352', '\u0357', '\u0351', '\u0307', '\u0308', '\u030a', '\u0342', '\u0343', '\u0344', '\u034a', '\u034b', '\u034c', '\u0303', '\u0302', '\u030c', '\u0350', '\u0300', '\u0301', '\u030b', '\u030f', '\u0312', '\u0313', '\u0314', '\u033d', '\u0309', '\u0363', '\u0364', '\u0365', '\u0366', '\u0367', '\u0368', '\u0369', '\u036a', '\u036b', '\u036c', '\u036d', '\u036e', '\u036f', '\u033e', '\u035b', '\u0346', '\u031a'];
const zalgoDown = ['\u0316', '\u0317', '\u0318', '\u0319', '\u031c', '\u031d', '\u031e', '\u031f', '\u0320', '\u0324', '\u0325', '\u0326', '\u0329', '\u032a', '\u032b', '\u032c', '\u032d', '\u032e', '\u032f', '\u0330', '\u0331', '\u0332', '\u0333', '\u0339', '\u033a', '\u033b', '\u033c', '\u0345', '\u0347', '\u0348', '\u0349', '\u034d', '\u034e', '\u0353', '\u0354', '\u0355', '\u0356', '\u0359', '\u035a', '\u035c', '\u035d', '\u035e', '\u035f', '\u0360', '\u0361', '\u0362', '\u034f', '\u0358', '\u0323'];
const zalgoMid = ['\u0315', '\u031b', '\u0340', '\u0341', '\u0358', '\u0321', '\u0322', '\u0327', '\u0328', '\u0334', '\u0335', '\u0336', '\u034f', '\u035c', '\u035d', '\u035e', '\u035f', '\u0360', '\u0361', '\u0362', '\u0338', '\u0337', '\u0362', '\u0488', '\u0489'];

function generateZalgo(text) {
    let zalgoText = '';
    for (const char of text) {
        let newChar = char;
        const randomUp = Math.floor(Math.random() * 5) + 1;
        const randomMid = Math.floor(Math.random() * 2) + 1;
        const randomDown = Math.floor(Math.random() * 5) + 1;
        for (let i = 0; i < randomUp; i++) newChar += zalgoUp[Math.floor(Math.random() * zalgoUp.length)];
        for (let i = 0; i < randomMid; i++) newChar += zalgoMid[Math.floor(Math.random() * zalgoMid.length)];
        for (let i = 0; i < randomDown; i++) newChar += zalgoDown[Math.floor(Math.random() * zalgoDown.length)];
        zalgoText += newChar;
    }
    return zalgoText;
}

// A map of characters for the 'fancy' command
const fontMap = {
    'Ôº°': 'A', 'Ôº¢': 'B', 'Ôº£': 'C', 'Ôº§': 'D', 'Ôº•': 'E', 'Ôº¶': 'F', 'Ôºß': 'G', 'Ôº®': 'H', 'Ôº©': 'I', 'Ôº™': 'J', 'Ôº´': 'K', 'Ôº¨': 'L', 'Ôº≠': 'M', 'ÔºÆ': 'N', 'ÔºØ': 'O', 'Ôº∞': 'P', 'Ôº±': 'Q', 'Ôº≤': 'R', 'Ôº≥': 'S', 'Ôº¥': 'T', 'Ôºµ': 'U', 'Ôº∂': 'V', 'Ôº∑': 'W', 'Ôº∏': 'X', 'Ôºπ': 'Y', 'Ôº∫': 'Z',
    'ÔΩÅ': 'a', 'ÔΩÇ': 'b', 'ÔΩÉ': 'c', 'ÔΩÑ': 'd', 'ÔΩÖ': 'e', 'ÔΩÜ': 'f', 'ÔΩá': 'g', 'ÔΩà': 'h', 'ÔΩâ': 'i', 'ÔΩä': 'j', 'ÔΩã': 'k', 'ÔΩå': 'l', 'ÔΩç': 'm', 'ÔΩé': 'n', 'ÔΩè': 'o', 'ÔΩê': 'p', 'ÔΩë': 'q', 'ÔΩí': 'r', 'ÔΩì': 's', 'ÔΩî': 't', 'ÔΩï': 'u', 'ÔΩñ': 'v', 'ÔΩó': 'w', 'ÔΩò': 'x', 'ÔΩô': 'y', 'ÔΩö': 'z',
    'A': 'Ôº°', 'B': 'Ôº¢', 'C': 'Ôº£', 'D': 'Ôº§', 'E': 'Ôº•', 'F': 'Ôº¶', 'G': 'Ôºß', 'H': 'Ôº®', 'I': 'Ôº©', 'J': 'Ôº™', 'K': 'Ôº´', 'L': 'Ôº¨', 'M': 'Ôº≠', 'N': 'ÔºÆ', 'O': 'ÔºØ', 'P': 'Ôº∞', 'Q': 'Ôº±', 'R': 'Ôº≤', 'S': 'Ôº≥', 'T': 'Ôº¥', 'U': 'Ôºµ', 'V': 'Ôº∂', 'W': 'Ôº∑', 'X': 'Ôº∏', 'Y': 'Ôºπ', 'Z': 'Ôº∫',
    'a': 'ÔΩÅ', 'b': 'ÔΩÇ', 'c': 'ÔΩÉ', 'd': 'ÔΩÑ', 'e': 'ÔΩÖ', 'f': 'ÔΩÜ', 'g': 'ÔΩá', 'h': 'ÔΩà', 'i': 'ÔΩâ', 'j': 'ÔΩä', 'k': 'ÔΩã', 'l': 'ÔΩå', 'm': 'ÔΩç', 'n': 'ÔΩé', 'o': 'ÔΩè', 'p': 'ÔΩê', 'q': 'ÔΩë', 'r': 'ÔΩí', 's': 'ÔΩì', 't': 'ÔΩî', 'u': 'ÔΩï', 'v': 'ÔΩñ', 'w': 'ÔΩó', 'x': 'ÔΩò', 'y': 'ÔΩô', 'z': 'ÔΩö',
    'bold': { 'a': 'ùêö', 'b': 'ùêõ', 'c': 'ùêú', 'd': 'ùêù', 'e': 'ùêû', 'f': 'ùêü', 'g': 'ùê†', 'h': 'ùê°', 'i': 'ùê¢', 'j': 'ùê£', 'k': 'ùê§', 'l': 'ùê•', 'm': 'ùê¶', 'n': 'ùêß', 'o': 'ùê®', 'p': 'ùê©', 'q': 'ùê™', 'r': 'ùê´', 's': 'ùê¨', 't': 'ùê≠', 'u': 'ùêÆ', 'v': 'ùêØ', 'w': 'ùê∞', 'x': 'ùê±', 'y': 'ùê≤', 'z': 'ùê≥' },
    'italic': { 'a': 'ùò¢', 'b': 'ùò£', 'c': 'ùò§', 'd': 'ùò•', 'e': 'ùò¶', 'f': 'ùòß', 'g': 'ùò®', 'h': 'ùò©', 'i': 'ùò™', 'j': 'ùò´', 'k': 'ùò¨', 'l': 'ùò≠', 'm': 'ùòÆ', 'n': 'ùòØ', 'o': 'ùò∞', 'p': 'ùò±', 'q': 'ùò≤', 'r': 'ùò≥', 's': 'ùò¥', 't': 'ùòµ', 'u': 'ùò∂', 'v': 'ùò∑', 'w': 'ùò∏', 'x': 'ùòπ', 'y': 'ùò∫', 'z': 'ùòª' },
    'monospace': { 'a': 'ùöä', 'b': 'ùöã', 'c': 'ùöå', 'd': 'ùöç', 'e': 'ùöé', 'f': 'ùöè', 'g': 'ùöê', 'h': 'ùöë', 'i': 'ùöí', 'j': 'ùöì', 'k': 'ùöî', 'l': 'ùöï', 'm': 'ùöñ', 'n': 'ùöó', 'o': 'ùöò', 'p': 'ùöô', 'q': 'ùöö', 'r': 'ùöõ', 's': 'ùöú', 't': 'ùöù', 'u': 'ùöû', 'v': 'ùöü', 'w': 'ùö†', 'x': 'ùö°', 'y': 'ùö¢', 'z': 'ùö£' },
    'script': { 'a': 'ùí∂', 'b': 'ùí∑', 'c': 'ùí∏', 'd': 'ùíπ', 'e': 'ùëí', 'f': 'ùíª', 'g': 'ùëî', 'h': 'ùíΩ', 'i': 'ùíæ', 'j': 'ùíø', 'k': 'ùìÄ', 'l': 'ùìÅ', 'm': 'ùìÇ', 'n': 'ùìÉ', 'o': 'ùëú', 'p': 'ùìÖ', 'q': 'ùìÜ', 'r': 'ùìá', 's': 'ùìà', 't': 'ùìâ', 'u': 'ùìä', 'v': 'ùìã', 'w': 'ùìå', 'x': 'ùìç', 'y': 'ùìé', 'z': 'ùìè' },
    'gothic': { 'a': 'ùñÜ', 'b': 'ùñá', 'c': 'ùñà', 'd': 'ùñâ', 'e': 'ùñä', 'f': 'ùñã', 'g': 'ùñå', 'h': 'ùñç', 'i': 'ùñé', 'j': 'ùñè', 'k': 'ùñê', 'l': 'ùñë', 'm': 'ùñí', 'n': 'ùñì', 'o': 'ùñî', 'p': 'ùñï', 'q': 'ùññ', 'r': 'ùñó', 's': 'ùñò', 't': 'ùñô', 'u': 'ùñö', 'v': 'ùñõ', 'w': 'ùñú', 'x': 'ùñù', 'y': 'ùñû', 'z': 'ùñü' },
    'circled': { 'a': '‚ìê', 'b': '‚ìë', 'c': '‚ìí', 'd': '‚ìì', 'e': '‚ìî', 'f': '‚ìï', 'g': '‚ìñ', 'h': '‚ìó', 'i': '‚ìò', 'j': '‚ìô', 'k': '‚ìö', 'l': '‚ìõ', 'm': '‚ìú', 'n': '‚ìù', 'o': '‚ìû', 'p': '‚ìü', 'q': '‚ì†', 'r': '‚ì°', 's': '‚ì¢', 't': '‚ì£', 'u': '‚ì§', 'v': '‚ì•', 'w': '‚ì¶', 'x': '‚ìß', 'y': '‚ì®', 'z': '‚ì©' },
};

function applyFont(text, font) {
    let result = '';
    const fontSet = fontMap[font];
    if (!fontSet) return text;
    for (const char of text.toLowerCase()) {
        result += fontSet[char] || char;
    }
    return result;
}

// Map letters to emojis for emojiart
const emojiMap = {
    'a': 'üá¶', 'b': 'üáß', 'c': 'üá®', 'd': 'üá©', 'e': 'üá™', 'f': 'üá´', 'g': 'üá¨', 'h': 'üá≠', 'i': 'üáÆ', 'j': 'üáØ', 'k': 'üá∞', 'l': 'üá±', 'm': 'üá≤', 'n': 'üá≥', 'o': 'üá¥', 'p': 'üáµ', 'q': 'üá∂', 'r': 'üá∑', 's': 'üá∏', 't': 'üáπ', 'u': 'üá∫', 'v': 'üáª', 'w': 'üáº', 'x': 'üáΩ', 'y': 'üáæ', 'z': 'üáø'
};

function emojify(text) {
    let result = '';
    for (const char of text.toLowerCase()) {
        result += emojiMap[char] || char;
    }
    return result;
}

module.exports = { flipText, generateZalgo, applyFont, emojify };